#!/bin/bash

# load export settings
./settings.sh

OPTIONS=NULL
SEARCH_TERM1=$1
SEARCH_TERM2=$2
CACHE_NAME=$3
CACHE_PATH="$HOME/.music_shell/cache/$CACHE_NAME"
IGNORE_CASE=$4

# check parmaters
if [[ -z "$SEARCH_TERM1" || -z "$SEARCH_TERM2" || -z "$CACHE_NAME"  ]]; then
    echo "Error: no "SEARCH_TERM1 or SEARCH_TERM2 or CACHE_NAME"  specified ..."
    exit
fi

echo "$SEARCH_TERM1 <AND> $SEARCH_TERM2 $IGNORE_CASE" >> $HOME/.music_shell/cache/search_history_all
cat "$CACHE_PATH" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM1" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM2" | tee $HOME/.music_shell/queue
#!/bin/bash

./settings.sh

SRC_LIST=$1

./append.sh "$SRC_LIST" "$HOME/.music_shell/queue"
#!/bin/bash

SRC_LIST=$1
DST_LIST=$2

cat "$SRC_LIST" >> "$LIST_NAME"
#!/bin/bash

./settings.sh

MUSIC_PATH=$1
#DATA_PATH=$2
DEST_PATH=$3
DELIMITER=| # todo

# find .. -name "*.flac" -o -name "*.mp3" -o -name "*.wma"
find "$MUSIC_PATH" -iname "*.mp3" > $HOME/.music_shell/$NAME
find "$MUSIC_PATH" -iname "*.ogg" >> $HOME/.music_shell/$NAME
find "$MUSIC_PATH" -iname "*.flac" >> $HOME/.music_shell/$NAME

TIMESTAMP=$($HOME/bin/date.sh)
TMP_NAME="tmp_${TIMESTAMP}.txt"
CACHE_NAME="${DATA_PATH}/${NAME%.*}_${TIMESTAMP}.txt"

# trim off root                                             # replace delimiter   # create date & album columns
sed 's/\/mnt\/music\/music-lib\///' "${CACHE_NAME}" | sed s/\\//\|/g | sed s/' - '/\|/ | sed s/\\.[[:space:]]/\|/ > $TMP_NAME
# add disc column                                           # seperate disc & track
sed -E "s/(\|[[:digit:]][[:digit:]]\|)/\|\1/" "$TMP_NAME" | sed -E "s/([[:digit:]]+)\\./\1\|/" > "${CACHE_NAME}"
echo ${CACHE_NAME}
#!/bin/bash

# read in config
./settings.sh

# read config file pairs

while read line; do
	NAME=${line%%=*}  # gets name
    VALUE=${line##*=} # gets value
    echo "Name=$NAME Value=$VALUE"
done < $HOME/.music_shell/config
#!/bin/bash

# load export settings
./settings.sh

# command line options
OPTIONS=NULL
SRC_PATH=$1
DEST_PATH=$2
DEST_FILE #=${DEST_PATH##/*/}

# copy file
mkdir -p ${DEST_PATH}
copy_file.sh ${SRC_FILE} ${DEST_FILE}

# recode ?#!/bin/bash

# load export settings
./settings.sh

OPTIONS=NULL
PLAYLIST_PATH=$1
DEST_PATH=$2

if [[ ! -r "$PLAYLIST_PATH" ]]; then
    echo "error: $CACHE_NAME does not exists"
    exit
fi

mkdir -p ${DEST_PATH}
# iter lines copy each file
cp ${SRC_FILE} ${DEST_FILE}#!/bin/bash

# load export settings
./settings.sh

OPTIONS=NULL
SEARCH_TERM=$1
CACHE_NAME="$HOME/.music_shell/cache/$2"
PLAYLIST_NAME=$3
IGNORE_CASE=$4

if [[ ! -r "$CACHE_NAME" ]]; then
    echo "error: $CACHE_NAME does not exists"
    exit
fi

if [ -z "$SEARCH_TERM" ]; then
    echo "Error: no "SEARCH_TERM" specified ..."
    exit
fi

cat "$CACHE_NAME" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM" | tee -a $HOME/"${PLAYLIST_NAME}.m3u.swp"
cat $HOME/"${PLAYLIST_NAME}.m3u.swp" | sort -u > $HOME/"${PLAYLIST_NAME}.m3u"
rm $HOME/"${PLAYLIST_NAME}.m3u.swp"#!/bin/bash

# load export settings
./settings.sh

OPTIONS=NULL
SEARCH_TERM=$1
CACHE_NAME="$HOME/.music_shell/cache/$2"
PLAYLIST_NAME=$3
IGNORE_CASE=$4

if [[ ! -r "$CACHE_NAME" ]]; then
    echo "error: $CACHE_NAME does not exists"
    exit
fi

if [ -z "$SEARCH_TERM" ]; then
    echo "Error: no "SEARCH_TERM" specified ..."
    exit
fi

cat "$CACHE_NAME" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM" | tee -a $HOME/"${PLAYLIST_NAME}.m3u.swp"
cat $HOME/"${PLAYLIST_NAME}.m3u.swp" | sort -u > $HOME/"${PLAYLIST_NAME}.m3u"
rm $HOME/"${PLAYLIST_NAME}.m3u.swp"#!/bin/bash

./settings.sh

SEARCH_TERM=$1
IGNORE_CASE=$2
CACHE_NAME="cache.txt"

./search.sh "$SEARCH_TERM" "$CACHE_NAME" $IGNORE_CASE

echo -e "Match Count: \e[31m$(cat "$HOME/.music_shell/queue" | wc -l) / $(cat "$HOME/.music_shell/cache/$CACHE_NAME" | wc -l)\e[0m ... searching for -> \e[31m\""$SEARCH_TERM"\"\e[0m"
#!/bin/bash

#OPTS=$1
ALBUM=$1
CACHE=$2
#REXP="^albums\\,[A-Za-z0-9[:space:]]+\\,[0-9]+\\,.*$ALBUM.*\\,[A-Za-z0-9]+\\,[A-Za-z0-9]+\\,[A-Za-z0-9[:space:]]+\\.[A-Za-z0-9]+$"
REXP="^albums\\,[A-Za-z0-9[:space:]]+\\,[0-9]+\\,.*$ALBUM.*\\,[0-9]+\\,[0-9]+\\,[A-Za-z0-9[:space:]]+\\.[A-Za-z0-9]+\\,$"

#echo "$#"
#echo "$@"

#echo $DATE
#echo $CACHE
#echo $REXP
#echo "$REXP"
#echo '$REXP'

cat $CACHE | egrep -i "$REXP" | tee playing
#!/bin/bash

ARTIST=$1
CACHE=$2
REXP="^albums\\,.*$ARTIST.*\\,[A-Za-z0-9]+\\,.*$"

#echo $DATE
#echo $CACHE
#echo $REXP
#echo "$REXP"
#echo '$REXP'

cat $CACHE | egrep "$REXP" | tee playing
#!/bin/bash

DATE=$1
CACHE=$2
REXP="^albums\\,[A-Za-z0-9]+\\,$DATE\\,[A-Za-z0-9]+\\,.*$"

#echo $DATE
#echo $CACHE
#echo $REXP
#echo "$REXP"
#echo '$REXP'

cat $CACHE | egrep "$REXP" | tee playing
#!/bin/bash

TRACK=$1
CACHE=$2
REXP="^albums\\,[A-Za-z0-9[:space:]]+\\,[0-9]+\\,[A-Za-z0-9[:space:]]+\\,$TRACK\\,[A-Za-z0-9[:space:]]+\\.[A-Za-z0-9]+$"

#echo $DATE
#echo $CACHE
#echo $REXP
#echo "$REXP"
#echo '$REXP'

cat $CACHE | egrep "$REXP" | tee playing
git #!/bin/bash

./fields.sh

sed -E "s/^(.+?)\|(.+?)\|(.+?)\|(.+?)\|(.+?)\|(.+?)\|(.+?)$/\\$folder~~\\$artist~~\\$date~~\\$album~~\\$disc~~\\$track~~\\$title~~/" ../test/cache.txt
#!/bin/bash

./settings.sh

LINE_NUMBER=$1
SRC_LIST=$2


./insert $LINE_NUMBER "$SRC_LIST" "$HOME/.music_shell/$queue"#!/bin/bash

LINE_NUMBER=$1
SRC_LIST=$2
DST_LIST=$3

#  get length of file
LEN=$(cat "$DST_LIST" | wc -l)
LEN_TAIL=$(($LEN - $LINE_NUMBER))

# get head and tail @ line number
head -$LINE_NUMBER "$DST_LIST" > dst_head.swp
tail -$LEN_TAIL "$DST_LIST" > dst_tail.swp

# make head to destination
rm "$DST_LIST"
mv dst_head.swp $DST_LIST

# insert after head
cat "$SRC_LIST" >> $DST_LIST
# append tail
cat dst_tail.swp >> $DST_LIST

# remove tmp file
rm dst_tail.swp#!/bin/bash

# merge 2 playlists

SRC=$1
DST=$2

# append to DST
cp "${DST}" "${DST}".swp
cat "${SRC}" >> "${DST}".swp

# sort & remove duplicates
cat "${DST}".swp | sort -u > "${DST}"
rm "${DST}".swp#!/bin/bash

# load export settings
./settings.sh

OPTIONS=NULL
SEARCH_TERM1=$1
SEARCH_TERM2=$2
CACHE_NAME=$3
CACHE_PATH="$HOME/.music_shell/cache/$CACHE_NAME"
IGNORE_CASE=$4

# check parmaters
if [[ -z "$SEARCH_TERM1" || -z "$SEARCH_TERM2" || -z "$CACHE_NAME"  ]]; then
    echo "Error: no "SEARCH_TERM1 or SEARCHTERM2 or CACHE_NAME"  specified ..."
    exit
fi

echo "$SEARCH_TERM1 <OR> $SEARCH_TERM2 $IGNORE_CASE" >> $HOME/.music_shell/cache/search_history_all
cat "$CACHE_PATH" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM1" | tee $HOME/.music_shell/queue
cat "$CACHE_PATH" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM2" | sort -u | tee -a $HOME/.music_shell/queue
./play_list.sh playing#!/bin/bash

./search.sh "$1" cache.txt -i#!/bin/bash

input=$1

while read line; do
	NAME=${line%%=*}
    VALUE=${line##*=}
    echo "Name=$NAME Value=$VALUE"
done < "$input"

# get last one
NAME=${line%%=*}
VALUE=${line##*=}
echo "Name=$NAME Value=$VALUE"
FILE_NAME=$1
PREFIX=$2
NEW_PREFIX=$3

# FILE_CONTENT=$(cat $FILE_NAME | sed 's/Z:\\mnt\\music\\music-lib\\//g')
# echo "FILE_CONTENT:$FILE_CONTENTS"
# replace delimter backslash with forward slash
FILE_CONTENTS=$(cat $FILE_NAME | sed 's/\\/\//g')

echo "FILE_CONTENT:$FILE_CONTENTS"
echo "FILE_NAME_OUT=${FILE%.*}.txt"

# echo $FILE_CONTENTS | "sed s/${PREFIX}/xxxx/g" > ${FILE%.*}.txt
echo "PREFIX:$PREFIX"
echo "NEW_PREFIX:$NEW_PREFIX"#!/bin/bash

SRC=$1
DEST=$2
PREFIX=$3

#remove prefix from SRC.m3u

# assert all SRC.m3u lines have prefix, then remove, save results to DEST.m3u#!/bin/bash


MUSIC_PATH='/mnt/music/music-lib'
NAME=$1

#find "$MUSIC_PATH" -iname "*.mp3" > /home/brian/$NAME
find "$MUSIC_PATH" -regex "mp3" > /home/brian/my_regex_find.txt#!/bin/bash

./settings.sh

# run with default
FILTER=$1
NAME=$2
#IGNORE_CASE=$3
IGNORE_CASE='--ignore_case'

./create_playlist $FILTER cache.txt $NAME ${IGNORE_CASE}
FILE=$1
PREFIX='Z:/mnt/music/music-lib/albums/'
NEW_PREFIX='FAFAEE/Music/'

./remap.sh "$FILE" "$PREFIX" "$NEW_PREFIX"#!/bin/bash

./search.sh "$1" cache.txt -i#!/bin/bash

./settings.sh

SEARCH_TERM=$1
IGNORE_CASE=$2
CACHE_NAME="cache.txt"

./search.sh "$SEARCH_TERM" "$CACHE_NAME" $IGNORE_CASE

echo -e "Match Count: \e[31m$(cat "$HOME/.music_shell/queue" | wc -l) / $(cat "$HOME/.music_shell/cache/$CACHE_NAME" | wc -l)\e[0m ... searching for -> \e[31m\""$SEARCH_TERM"\"\e[0m"
#!/bin/bash

$LIST_NAME
$SEARCH_TERM
$CACHE_NAME


echo -e "Match Count: \e[31m$(cat "${LIST_NAME}" | wc -l) / $(cat "$CACHE_NAME" | wc -l)\e[0m ... searching for -> \e[31m\""$SEARCH_TERM"\"\e[0m"#!/bin/bash

# load export settings
./settings.sh

OPTIONS=NULL
SEARCH_TERM=$1
CACHE_NAME="$HOME/.music_shell/cache/$2"
IGNORE_CASE=$3

if [ -z "$SEARCH_TERM" ]; then
    echo "Error: no "SEARCH_TERM" specified ..."
    exit
fi

echo "$SEARCH_TERM $IGNORE_CASE" >> $HOME/.music_shell/cache/search_history_all
cat "$CACHE_NAME" | egrep --color=always $IGNORE_CASE "$SEARCH_TERM" | tee $HOME/.music_shell/queue
#cp music_shell/queue music_shell/cache/hist_"$(date.sh) \"$SEARCH_TERM\"".txt
#!/bin/bash

FIELDS=$1

FOLDER=1
ARTIST=2
DATE=3
ALBUM=4
DISC=5
TRACK=6
TITLE=7

#VALID_CHARS="[-a-zA-Z0-9'\"~!@#&)(}{][_ ]"
VALID_CHARS="[-a-zA-Z0-9_ ]"
#FOLDER|2       ARTIST          |3        DATE               |4    ALBUM             |5   DISC           |6    TRACK         |7      TITLE           |    EXT        .ENDLINE
RECORD="^\(${VALID_CHARS}*\)\|\([0-9][0-9][0-9][0-9]\)\|\(${VALID_CHARS}*\)\|\([0-9][0-9]\)?\|\([0-9][0-9]\)?\|\(${VALID_CHARS}*\)\.\(mp3|ogg|flac\)$"

cut -d"|" -f "$ARTIST $DATE $ALBUM $TRACK $TITLE" cache/cache.txt > s.txt
#cat s.txt | sed 's/^\([a-zA-Z ]*\)|\([0-9][0-9][0-9][0-9]\)|\([a-zA-Z ]*\)|\([0-9][0-9]\)|\([a-zA-Z ]*\)\..*$/ARTIST:\1 ALBUM:\2-\3 TITLE:\4:\5/g'
#cat s.txt | sed -E "s/(\w*)\|/\1/"

#                      ^ARTIST                |DATE             |ALBUM                   |TRACK            |TITLE                   .EXT$
cat s.txt | sed -E s/"([[:alnum:][:blank:]]+)\|([[:digit:]]{4})\|([[:alnum:][:blank:]]+)\|([[:digit:]]{2})\|([[:alnum:][:blank:]]+)\.(mp3|ogg|flac)"/\\6\\5\\4\\3\\2\\1/g
#!/bin/bash

~/src/music_shell/src/utility/fields.sh

# FIELDS=$1
# FOLDER=1
# ARTIST=2
# DATE=3
# ALBUM=4
# DISC=5
# TRACK=6
# TITLE=7
# EXT=8

# VALID_CHARS="[-a-zA-Z0-9_ ]"
NAME=$(date.sh)_cache.txt
cut -d"|" -f "$ARTIST $DATE $ALBUM $TRACK $TITLE" cache/cache.txt > cache/$NAME

#  ^(1)FOLDER       |(2)ARTIST     |(3)DATE     |(4)ALBUM      |(5)Disc     |(6)TRACK     |(7)TITLE      .(8)EXT$
# REGX="^${FOLDER_EXP}\|${STRING_EXP}\|${DATE_EXP}\|${STRING_EXP}\|${DISC_EXP}\|${TRACK_EXP}\|${STRING_EXP}\.${EXT_EXP}$"
# PUNCT=" ][}{)(~!@#$%^&*_+=,.><:;'\\\""
# STRING_EXP="([[:alnum:][:blank:][ }{][|\~@#$%^&*()-_+=]+)"
# DATE_EXP="([[:digit:]]{4})"
# DISC_EXP="([[:digit:]]{2}?)"
# TRACK_EXP="([[:digit:]]{2})"
# EXT_EXP="((mp3|ogg|flac)|([[:alnum:]]{3}))"

# # PARAMS="s/${REGX}/\\${EXT} \\${ALBUM} \\${ARTIST} \\${DATE} \\${ALBUM} \\${TRACK} \\${TITLE}/g"
# # sed -E "$PARAMS" cache/cxche.txt
#sed -E "s/([[:alnum:][:blank:]]*)\|([[:digit:]]{4})\|([[:alnum:][:blank:]]*)\|([[:digit:]]{2})\|([[:alnum:][:blank:]]*)\.(mp3|ogg|flac)/\\2 \\3 \\4 \\5/g" cache/$NAME
sed -E "s/([[:alnum:][:blank:]][}{~!@#$%^&*)(_+=,.><:;]+)\|([[:alnum:][:blank:]]*)\|([[:digit:]]{4})\|([[:alnum:][:blank:]]*)\|([[:digit:]]{2}?)\|([[:digit:]]{2})\|([[:alnum:][:blank:]]*)\.(mp3|ogg|flac)$/\\${EXT} \\${ALBUM} \\${ARTIST} \\${DATE} \\${ALBUM} \\${TRACK} \\${TITLE}/g" cache/cache.txt#!/bin/bash

export HOME='/home/brian'
export CACHE_NAME='cache.m3u'
export QUEUE_NAME='queue.m3u'
export PREFIX='/mnt/music/music-lib'

# export CURRENT_PLAYLIST=$1
# export CURRENT_SONG=$2
# export CURRENT_POS=$3
# export CONTINOUS_PLAY=$4
# export RANMDON_PLAY=$5
# export HISTORY_LEN=100
# export NOW_PLAYING_LEN=$(cat ../cache/queue | wc -l)

export FOLDER='1'
export ARTIST='2'
export DATE='3'
export ALBUM='4'
export DISC='5'
export TRACK='6'
export TITLE='7'
#!/bin/bash

./settings.sh
#ALBUM=4

cut -d "|" -f $ALBUM $HOME/.music_shell/cache/cache.txt#!/bin/bash

./settings.sh

# ARTIST=2
# DATE=3
# ALBUM=4
# DISC=5
# TRACK=6
# TITLE=7

cut -d"|" -f "$ARTIST $DATE $ALBUM $DISC $TRACK $TITLE" $HOME/.music_shell/cache/cache.txt#!/bin/bash

./settings.sh

#ARTIST=2
cut -d "|" -f $ARTIST $HOME/.music_shell/cache/cache.txt#!/bin/bash

./settings.sh

#DATE=3
cut -d "|" -f $DATE $HOME/.music_shell/cache/cache.txt#!/bin/bash

./settings.sh

#DISC=5
cut -d "|" -f $DISC $HOME/.music_shell/cache/cache.txt#!/bin/bash
FIELD=$1
ARTIST=2
DATE=3
ALBUM=4
DISC=5
TRACK=6
TITLE=7

# exit
if [ -n "$FIELD" ]; then
    cut -d"|" -f "$FIELD" $HOME/.music_shell/cache/cache.txt
else
    echo "Error: no field specified ..."
    exit
fi
#!/bin/bash

NAME=$1
cat "$NAME"#!/bin/bash

./settings.sh

cat $HOME/.music_shell/queuestr=$(tail -n10 cache/search_history_all)
echo "$str" | tr ' ' '\n' | tac | xargs#!/bin/bash

./settings.sh

TITLE=7
cut -d "|" -f $TITLE cache/cache.txt#!/bin/bash

./settings.sh

TRACK=6
cut -d "|" -f $TRACK cache/cache.txt